{"version":3,"sources":["components/Link.js","components/LinkList.js","components/App.js","index.js"],"names":["Link","link","description","url","LinkList","query","gql","data","useQuery","feed","links","map","id","App","httpLink","createHttpLink","uri","client","ApolloClient","cache","InMemoryCache","ReactDOM","render","document","getElementById"],"mappings":"wNAoBeA,EAlBF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACT,gCACE,8BACGA,EAAKC,cAER,8BACGD,EAAKE,U,8LCLd,IAuBeC,EAvBE,WACf,IAAMC,EAAQC,cAAH,KAWHC,EAASC,mBAASH,GAAlBE,KAER,OACE,8BACGA,GAAQA,EAAKE,KAAKC,MAAMC,KAAI,SAAAV,GAAI,OAC/B,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKW,UClBTC,EADH,kBAAO,cAAC,EAAD,KCSbC,EAAWC,yBAAe,CAC9BC,IAAK,0BAGDC,EAAS,IAAIC,eAAa,CAC9BjB,KAAMa,EACNK,MAAO,IAAIC,kBAGbC,IAASC,OACP,cAAC,iBAAD,CAAgBL,OAAQA,EAAxB,SACE,cAAC,EAAD,MAEFM,SAASC,eAAe,W","file":"static/js/main.ea3e5713.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Link = ({ link }) => (\n    <div>\n      <div>\n        {link.description}\n      </div>\n      <div>\n        {link.url}\n      </div>\n    </div>\n)\n\nLink.propTypes = {\n  link: PropTypes.shape({\n    description: PropTypes.string,\n    url: PropTypes.string\n  })\n}\n\nexport default Link\n","import { useQuery, gql } from '@apollo/client'\nimport Link from './Link'\n\nconst LinkList = () => {\n  const query = gql`\n    {\n      feed {\n        links {\n          id\n          url\n          description\n        }\n      }\n    }\n  `\n  const { data } = useQuery(query)\n\n  return (\n    <div>\n      {data && data.feed.links.map(link => (\n        <Link key={link.id} link={link} />\n      ))}\n    </div>\n  )\n}\n\nexport default LinkList\n","import LinkList from './LinkList'\nconst App = () => (<LinkList />)\nexport default App\n","import ReactDOM from 'react-dom'\nimport './styles/index.css'\nimport App from './components/App'\nimport {\n  ApolloProvider,\n  ApolloClient,\n  createHttpLink,\n  InMemoryCache\n} from '@apollo/client'\n\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:4000'\n})\n\nconst client = new ApolloClient({\n  link: httpLink,\n  cache: new InMemoryCache()\n})\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <App />\n  </ApolloProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}